version: '3'

silent: false

vars:
  TOOL: "poetry run python -m tools.exec -t"

tasks:
  gen:types:
    desc: 🧙‍♂️ generate typed dict automatically
    cmds:
      - "{{.TOOL}} generator:types"
    sources:
      - pest/metadata/types/*.py
    generates:
      - pest/decorators/dicts/*.py

  fmt:check:
    aliases: [fmt]
    desc: check code format issues
    cmds:
      - poetry run black --check .

  fmt:fix:
    desc: fix code format issues
    cmds:
      - poetry run black . 

  lint:check:
    aliases: [lint]
    desc: check code lint issues
    cmds:
      - poetry run ruff check .

  lint:fix:
    desc: fix code lint issues
    cmds:
      - poetry run ruff check . --fix

  test:3.8:
    desc: 🧪 run tests on python 3.8
    cmds:
      - nox --session tests-3.8 --reuse-existing-virtualenvs

  test:3.9:
    desc: 🧪 run tests on python 3.9
    cmds:
      - nox --session tests-3.9 --reuse-existing-virtualenvs

  test:3.10:
    desc: 🧪 run tests on python 3.10
    cmds:
      - nox --session tests-3.10 --reuse-existing-virtualenvs
  
  test:3.11:
    desc: 🧪 run tests on python 3.11
    cmds:
      - nox --session tests-3.11 --reuse-existing-virtualenvs
  
  test:3.12:
    desc: 🧪 run tests on python 3.12
    cmds:
      - nox --session tests-3.12 --reuse-existing-virtualenvs

  test:all:
    desc: 🧪 run tests on all python versions
    cmds:
      - task --parallel test:3.12 test:3.11 test:3.10 test:3.9 test:3.8

  checks:
    desc: 🎨 run all checks
    cmds:
      - task --parallel fmt:check lint:check

  coverage:
    desc: 📊 run coverage
    cmds:
      - poetry run pytest --cov

  prebuild:
    desc: ⎇ run pre-commit tasks
    cmds:
      # run all tests
      - task checks
      - task test:all
      
  build:
    desc: 🏗️ build package
    cmds:
      - poetry build

  local-ci-workflow-release:
    desc: 🚀 run local ci workflow
    cmds:
      - |
        act push \
        -W="./.github/workflows/ci.yml" \
        -e="./.github/act-test/release.json" \
        --secret-file="./.github/act-test/secrets.env" \
        --pull=false \
        --matrix python-version:3.11

  local-ci-workflow-pr:
    desc: 🚀 run local ci workflow - pull request
    cmds:
      - |
        act pull_request \
        -W="./.github/workflows/ci.yml" \
        --secret-file="./.github/act-test/secrets.env" \
        --pull=false \
        --matrix python-version:3.11